name: Workflow for Environment Files

  
on: 
  workflow_dispatch

env:
  BAMBOO_BUILDNUMBER: '${{ github.workflow }}-${{ github.job }}-${{ github.run_id }}'
  REF: "${{ github.ref }}"
  TARGET_BRANCH: ${REF#refs/heads/}
  BALANCE: 35
  COLOR: "Blue"
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  BAMBOO_KEY: "${{ vars.BUILD_KEY || format('{0}-{1}-{2}', github.workflow, github.job, github.run_id) }}"
  
jobs:
  job1a:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set powershell v1
        continue-on-error: true
        run: |
          Get-ChildItem

          Install-Module -Name Invoke-MsBuild -Force
          Import-Module Invoke-MsBuild
          $file_path = "BambooBuild.proj"
          Invoke-MsBuild -Path $file_path -MsBuildParameters "/t:CheckAndMaybeUpdateNuGet /p:Configuration=Release /m /nr:false /verbosity:diagnostic /fl -v:diag"
      - name: Set powershell v2
        continue-on-error: true
        run: |
          Get-ChildItem

          $env:bamboo_planRepository_branchName = "${{ inputs.canonical-branch }}"

          # Locate MSBuild
          try {
              # Define the path to the amd64 MSBuild.exe
              $msbuildPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MsBuild\Current\Bin\amd64\MSBuild.exe"
    
              # Validate the MSBuild.exe path
              if (-not (Test-Path $msbuildPath)) {
                  Write-Error "MSBuild.exe not found at $msbuildPath. Ensure it is installed on the runner."
                  exit 1
              }        
              Write-Host "Using MSBuild.exe located at: $msbuildPath"
          } catch {
              # Provide meaningful context for the error
              Write-Error "Error locating MSBuild.exe: $($_.Exception.Message)"
              exit 1
          }
  
          # Define the path to the build project file and log file
          $projectFile = "BambooBuild.proj"
          $logFile = "${{ github.workspace }}\MsBuild_Log.txt"
  
          if (-not (Test-Path $projectFile)) {
            throw "Project file could not be found at the specified path: $projectFile. Ensure the path is correct."
          }
  
          Write-Host "Building project $projectFile. Logs will be written to $logFile"
  
          # Ensure the log file does not exist before starting the build
          if (Test-Path $logFile) { Remove-Item $logFile }
  
          # Run MSBuild with all parameters in one line
          & $msbuildPath "$projectFile" /p:Configuration=Release /p:GitHubCommitSHA=${{ github.sha }} /p:GitHubRunID=${{ github.run_id }} /p:GitHubRunNumber=${{ github.run_number }} /m /nr:false /fl "/flp:LogFile=$logFile;"
  
          # Check the exit code of MSBuild
          if ($LASTEXITCODE -ne 0) {
              if (Test-Path $logFile) {
                  Write-Error "MSBuild failed with exit code $LASTEXITCODE. Logs saved to $logFile"
              } else {
                  Write-Error "MSBuild failed with exit code $LASTEXITCODE. No log file was found."
              }
  
              exit $LASTEXITCODE
          }
  
          # If no failures, indicate success
          Write-Host "Build succeeded. Logs saved to $logFile"
      - name: Upload MSBuild log
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: MsBuildLog
          path: MsBuild_Log.txt
          if-no-files-found: warn
      - name: Upload BambooBuild.proj.msbuild.errors.log
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: MsBuildLog
          path: C:\Users\runneradmin\AppData\Local\Temp\BambooBuild.proj.msbuild.errors.log
          if-no-files-found: warn
      - name: Upload BambooBuild.proj.msbuild.log
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: MsBuildLog
          path: C:\Users\runneradmin\AppData\Local\Temp\BambooBuild.proj.msbuild.log
          if-no-files-found: warn
          
